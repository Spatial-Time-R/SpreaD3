===================
.:: SPREAD 2::.
===================
*Spatial Phylogenetic Reconstruction of EvolutionAry Dynamics 2*
Version: 2.0.0 alpha, 2015
Authors: Filip Bielejec, Andrew Rambaut, Marc A. Suchard & Philippe 'The Wise' Lemey
Homepage: http://rega.kuleuven.be/cev/ecv/software/spread
License: LGPL

h1. PURPOSE

SPREAD 2 is a program supporting processing and visualizations of Bayesian phylogeographic models.

h1. USAGE EXAMPLES


h3. CONTINUOUS TREE


h3. PARSING

@
# parse two traits
-parse -tree /home/filip/Dropbox/JavaProjects/Spread2/data/continuous/locationHost/HA_loc_host_mcc.tre -locationTrait location -traits trait1,trait2 -output test.json
@

# parse one trait
-parse -tree /home/filip/Dropbox/JavaProjects/Spread2/data/continuous/locationHost/HA_loc_host_mcc.tre -locationTrait location -hpd 80 -traits host -output test_host.json

h3. RENDERING

# use all default settings
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -output test.kml

h4. POLYGONS

# override default polygon color settings:
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolor 0 0 255 -output test.kml

# map polygon colors to host attribute values, use built-in color schemes
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -output test.kml

# map polygon colors to host attribute values, use supplied color sheet (RGB or RGBA values)
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors -output test.kml

# specify alpha channel for polygons, this option overwrites all previous settings, including those in color sheet:
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors -polygonalpha 255 -output test.kml

# map alpha channel for polygons, this option overwrites all previous settings, including those in color sheet:
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors2 -polygonalphamapping modality -output test.kml

h4. LINES

# override default line color settings:
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors2 -polygonalphamapping modality -linecolor 250 0 0 -output test.kml

# map line colors to host attribute values, use built-in color schemes. For lines which change host line color will be interpolated to reflect that
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors2 -polygonalphamapping modality -linecolormapping host -output test.kml

# map line colors to host attribute values, use supplied color sheet (RGB or RGBA values). For lines which change host line color will be interpolated to reflect that
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors2 -polygonalphamapping modality -linecolormapping host -linecolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors -output test.kml

# map line colors to duration attribute values, use supplied color sheet (RGB or RGBA values). Duration attribute applies to a whole branch and colors are not interpolated to reflect that:
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors2 -polygonalphamapping modality -linecolormapping duration -linecolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors -output test.kml

# specify alpha channel for lines, this option overwrites all previous settings, including those in color sheet:
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors2 -polygonalphamapping modality -linecolormapping host -linecolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors -linealpha 150 -output test.kml

# map alpha channel for lines to host attribute values, this option overwrites all previous settings, including those in color sheet. For lines which change host line alpha will be interpolated to reflect that:
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors2 -polygonalphamapping modality -linecolormapping host -linecolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors -linealphamapping host -output test.kml

# map alpha channel for lines to duration attribute values, this option overwrites all previous settings, including those in color sheet. Duration attribute applies to a whole branch and alpha is not interpolated to reflect that:
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors2 -polygonalphamapping modality -linecolormapping host -linecolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors -linealphamapping duration -output test.kml

# override default line width settings:
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors2 -polygonalphamapping modality -linecolormapping host -linecolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors -linealphamapping host -linewidth 2 -output test.kml

# map lines width to duration attribute values. Width can only be mapped to attributes which apply to a whole branch.
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors2 -polygonalphamapping modality -linecolormapping host -linecolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors -linealphamapping host -linewidthmapping duration -output test.kml

# override default line altitude settings:
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors2 -polygonalphamapping modality -linecolormapping host -linecolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors -linealphamapping host -linewidth 2 -linealtitude 50000 -output test.kml

# map lines altitude to distance attribute values. Altitude can only be mapped to attributes which apply to a whole branch.
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_host.json -polygoncolormapping host -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors2 -polygonalphamapping modality -linecolormapping host -linecolors /home/filip/Dropbox/JavaProjects/Spread2/data/3colors -linealphamapping host -linewidthmapping duration -linealtitudemapping distance -output test.kml


h3. DISCRETE TREE

h3. PARSING

-parse -locations /home/filip/Dropbox/JavaProjects/Spread2/data/discrete/H5N1/locationCoordinates_H5N1 -tree /home/filip/Dropbox/JavaProjects/Spread2/data/discrete/H5N1/H5N1_HA_discrete_MCC.tre -locationTrait states -intervals 10 -output test_discrete.json

h3. RENDERING

# use all default settings
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_discrete.json -output test.kml

h4. POLYGONS

# override default polygon color settings:
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_discrete.json -polygoncolor 0 255 255 -output test.kml

# map polygon colors to count attribute values, use built-in color schemes
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_discrete.json -polygoncolormapping count -output test.kml

# map polygon colors to location values, use built-in color schemes
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_discrete.json -polygoncolormapping location -output test.kml

# map polygon colors to location values, use supplied color sheet (RGB or RGBA values)
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_discrete.json -polygoncolormapping location -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/H5N1colors -output test.kml

# specify alpha channel for polygons, this option overwrites all previous settings, including those in color sheet:
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_discrete.json -polygoncolormapping location -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/H5N1colors -polygonalpha 100 -output test.kml

# map alpha channel for polygons, this option overwrites all previous settings, including those in color sheet:
-render -json /home/filip/Dropbox/JavaProjects/Spread2/test_discrete.json -polygoncolormapping location -polygoncolors /home/filip/Dropbox/JavaProjects/Spread2/data/H5N1colors -polygonalpha 100 -output test.kml





h1. LICENSE

  This is free software; you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as
  published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.
 
   This software is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   "GNU Lesser General Public License":http://www.gnu.org/licenses/lgpl.html for more details.

h1. TODO

* Renderers
  - alpha channel mapping for lines
  - control arc curvature [0 - 1]
  - D3 renderer tool
* Two data modes. dd/mm/yyyy and old origin dates.
* Restrict visual summaries or rate statistics to a particular set of nodes, like a clade or a trunk/backbone
* Display warning if one or more of the discrete states are not found. 
* Parsers work independently (if only locations supplied then only locations will be parsed).
* Uncaught exception handler (for bug reports).
* Processing large tree distributions on GPUs. Write a small library and JNI to it.  

